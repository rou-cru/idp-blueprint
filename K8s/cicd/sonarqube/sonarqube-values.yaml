## @section SonarQube Server
## @description Resource definitions for the main SonarQube application.
community:
  enabled: true

sonarqube:
  # -- Resource requests and limits for the SonarQube server.
  resources:
    requests:
      cpu: 250m
      memory: 1Gi
    limits:
      cpu: 1000m
      memory: 1.5Gi
  livenessProbe:
    exec:
      command:
        - sh
        - -c
        - 'wget --no-proxy --quiet -O /dev/null --timeout=1 --header="X-Sonar-Passcode: $SONAR_WEB_SYSTEMPASSCODE" "http://localhost:9000/api/system/liveness"'
    initialDelaySeconds: 60
    periodSeconds: 30
    failureThreshold: 6
    timeoutSeconds: 1
  readinessProbe:
    exec:
      command:
        - sh
        - -c
        - 'if curl -s -f http://localhost:9000/api/system/status | grep -q -e ''"status":"UP"'' -e ''"status":"DB_MIGRATION_NEEDED"'' -e ''"status":"DB_MIGRATION_RUNNING"''; then exit 0 fi exit 1'
    initialDelaySeconds: 60
    periodSeconds: 30
    failureThreshold: 6
    timeoutSeconds: 1

## @section PostgreSQL Database
## @description Resource definitions for the bundled PostgreSQL database.
# -- By default, the chart deploys a PostgreSQL database.
# -- We will define resources for it as well.
postgresql:
  # -- Resource requests and limits for the PostgreSQL pod.
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 250m
      memory: 256Mi

monitoringPasscodeSecretName: "sonarqube-monitoring-passcode"
monitoringPasscodeSecretKey: "passcode"
